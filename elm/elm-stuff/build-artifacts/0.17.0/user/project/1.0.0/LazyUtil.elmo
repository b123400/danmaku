var _user$project$LazyUtil$foldr = function (reduce) {
	var reduce$ = F2(
		function (lazyA, lazyB) {
			return A2(
				_elm_lang$lazy$Lazy$andThen,
				lazyA,
				function (a) {
					return A2(
						_elm_lang$lazy$Lazy$andThen,
						lazyB,
						function (b) {
							return A2(reduce, a, b);
						});
				});
		});
	return _elm_lang$core$List$foldl(reduce$);
};
var _user$project$LazyUtil$foldl = function (reduce) {
	var reduce$ = F2(
		function (lazyA, lazyB) {
			return A2(
				_elm_lang$lazy$Lazy$andThen,
				lazyA,
				function (a) {
					return A2(
						_elm_lang$lazy$Lazy$andThen,
						lazyB,
						function (b) {
							return A2(reduce, a, b);
						});
				});
		});
	return _elm_lang$core$List$foldl(reduce$);
};
var _user$project$LazyUtil$collect = function (lazies) {
	var reduce$ = F2(
		function (a, b) {
			return _elm_lang$lazy$Lazy$lazy(
				_elm_lang$core$Basics$always(
					A2(_elm_lang$core$List_ops['::'], a, b)));
		});
	return A3(
		_user$project$LazyUtil$foldl,
		reduce$,
		_elm_lang$lazy$Lazy$lazy(
			_elm_lang$core$Basics$always(
				_elm_lang$core$Native_List.fromArray(
					[]))),
		lazies);
};
