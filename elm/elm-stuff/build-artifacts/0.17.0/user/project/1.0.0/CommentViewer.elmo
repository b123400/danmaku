var _user$project$CommentViewer$debugDanmaku = function (danmaku) {
	return _elm_lang$core$Basics$toString(
		A2(
			_elm_lang$core$List$map,
			function (a) {
				return {
					ctor: '_Tuple2',
					_0: a,
					_1: _user$project$CommentLayout$getY(a)
				};
			},
			danmaku));
};
var _user$project$CommentViewer$view = function (_p0) {
	var _p1 = _p0;
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(
						A2(
							_elm_lang$core$String$join,
							', ',
							A2(_elm_lang$core$List$map, _user$project$Comment$text, _p1._0.comments)))
					]))
			]));
};
var _user$project$CommentViewer$slidingComments = _elm_lang$core$Native_Platform.incomingPort('slidingComments', _elm_lang$core$Json_Decode$value);
var _user$project$CommentViewer$SetComments = function (a) {
	return {ctor: 'SetComments', _0: a};
};
var _user$project$CommentViewer$receiveComments = function (value) {
	var result = A2(_elm_lang$core$Json_Decode$decodeValue, _user$project$Comment$decodeList, value);
	var _p2 = result;
	if (_p2.ctor === 'Err') {
		return A2(
			_elm_lang$core$Debug$log,
			_p2._0,
			_user$project$CommentViewer$SetComments(
				_elm_lang$core$Native_List.fromArray(
					[])));
	} else {
		return _user$project$CommentViewer$SetComments(_p2._0);
	}
};
var _user$project$CommentViewer$subscriptions = function (_p3) {
	return _user$project$CommentViewer$slidingComments(_user$project$CommentViewer$receiveComments);
};
var _user$project$CommentViewer$Model = function (a) {
	return {ctor: 'Model', _0: a};
};
var _user$project$CommentViewer$init = {
	ctor: '_Tuple2',
	_0: _user$project$CommentViewer$Model(
		{
			comments: _elm_lang$core$Native_List.fromArray(
				[])
		}),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$CommentViewer$update = F2(
	function (msg, _p4) {
		var _p5 = _p4;
		var _p6 = msg;
		var _p7 = _p6._0;
		return A2(
			_elm_lang$core$Platform_Cmd_ops['!'],
			A3(
				_elm_lang$core$Debug$log,
				_user$project$CommentViewer$debugDanmaku(
					A2(_user$project$CommentLayout$danmaku, 1024, _p7)),
				_user$project$CommentViewer$Model,
				_elm_lang$core$Native_Utils.update(
					_p5._0,
					{comments: _p7})),
			_elm_lang$core$Native_List.fromArray(
				[]));
	});
var _user$project$CommentViewer$main = {
	main: _elm_lang$html$Html_App$program(
		{init: _user$project$CommentViewer$init, update: _user$project$CommentViewer$update, subscriptions: _user$project$CommentViewer$subscriptions, view: _user$project$CommentViewer$view})
};
